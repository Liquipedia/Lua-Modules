--- Triple Comment to Enable our LLS Plugin
describe('ordinal', function()
	local Ordinal = require('Module:Ordinal')

	describe('basic input', function()
		it('check', function()
			assert.is_nil(Ordinal.written())
			assert.is_nil(Ordinal.written(''))
			assert.is_nil(Ordinal.written('foo'))
		end)
	end)

	describe('written', function()
		it('check', function()
			assert.are_equal('first', Ordinal.written(1))
			assert.are_equal('second', Ordinal.written(2))
			assert.are_equal('third', Ordinal.written(3))
			assert.are_equal('fourth', Ordinal.written(4))
			assert.are_equal('eighth', Ordinal.written(8))
			assert.are_equal('eleventh', Ordinal.written(11))
			assert.are_equal('twelfth', Ordinal.written(12))
			assert.are_equal('thirteenth', Ordinal.written(13))
			assert.are_equal('twentieth-first', Ordinal.written(21))
			assert.are_equal('fiftieth', Ordinal.written(50))
			assert.are_equal('one hundred and first', Ordinal.written(101))
			assert.are_equal('one hundred and thirtieth-fifth', Ordinal.written(135))
			assert.are_equal('One hundred and thirtieth-fifth', Ordinal.written(135, {capitalize = true}))
			assert.are_equal('one-hundred-and-thirtieth-fifth', Ordinal.written(135, {hyphenate = true}))
			assert.are_equal('firsts', Ordinal.written(1, {plural = true}))
		end)
	end)

	describe('to ordinal', function()
		it('check', function()
			assert.are_equal('1st', Ordinal.toOrdinal(1))
			assert.are_equal('2nd', Ordinal.toOrdinal(2))
			assert.are_equal('3rd', Ordinal.toOrdinal(3))
			assert.are_equal('4th', Ordinal.toOrdinal(4))
			assert.are_equal('8th', Ordinal.toOrdinal(8))
			assert.are_equal('11th', Ordinal.toOrdinal(11))
			assert.are_equal('12th', Ordinal.toOrdinal(12))
			assert.are_equal('13th', Ordinal.toOrdinal(13))
			assert.are_equal('21st', Ordinal.toOrdinal(21))
			assert.are_equal('101st', Ordinal.toOrdinal(101))
			assert.are_equal('135th', Ordinal.toOrdinal(135))
			assert.are_equal('135<sup>th</sup>', Ordinal.toOrdinal(135, {superScript = true}))
		end)
	end)
end)
